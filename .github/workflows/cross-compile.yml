name: Cross-compile

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, windows-2019 ]

    steps:
      - uses: actions/checkout@v3

      - name: "Configure and build (Linux)"
        if: startsWith(runner.os, 'Linux')
        run: |
          cmake . -B build
          cmake --build build

      - name: "Configure and build (Windows)"
        if: startsWith(runner.os, 'Windows')
        run: |
          cmake . -B build -A x64
          cmake --build build --config Release

      - name: "Read model name"
        id: read_model_name
        run: |
          echo "MODEL_PATH=$(cat build/model.txt)" >> $GITHUB_ENV

      - name: "Archive library"
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: build/${{ env.MODEL_PATH }}/binaries

      - name: "Archive modelDescription.xml"
        if: startsWith(runner.os, 'Linux')
        uses: actions/upload-artifact@v3
        with:
          name: modelDescription
          path: build/${{ env.MODEL_PATH }}/modelDescription.xml

  deploy:
    needs: build
    runs-on: ubuntu-22.04

    steps:

      - name: "Read model name"
        id: read_model_name
        run: |
            echo "MODEL_PATH=$(cat build/model.txt)" >> $GITHUB_ENV

      - name: "Download binaries"
        uses: actions/download-artifact@v3
        with:
         name: binaries
         path: ${{ env.MODEL_PATH }}/binaries

      - name: "Download modelDescription.xml"
        uses: actions/download-artifact@v3
        with:
         name: modelDescription
         path: ${{ env.MODEL_PATH }}

      - name: "Set permissions"
        run: |
         sudo chmod -R +x ${{ env.MODEL_PATH }}/binaries

      - name: "Upload FMU"
        uses: actions/upload-artifact@v3
        with:
         name: ${{ env.MODEL_PATH }}
         path: ${{ env.MODEL_PATH }}
