@inproceedings{blochwitz2011functional,
  title={The functional mockup interface for tool independent exchange of simulation models},
  author={Blochwitz, Torsten and Otter, Martin and Arnold, Martin and Bausch, Constanze and Clau{\ss}, Christoph and Elmqvist, Hilding and Junghanns, Andreas and Mauss, Jakob and Monteiro, Manuel and Neidhold, Thomas and others},
  booktitle={Proceedings of the 8th international Modelica conference},
  pages={105--114},
  year={2011},
  organization={Link{\"o}ping University Press}
}

@inproceedings{blochwitz2012functional,
  title={Functional mockup interface 2.0: The standard for tool independent exchange of simulation models},
  author={Blochwitz, Torsten and Otter, Martin and {\AA}kesson, Johan and Arnold, Martin and Clauss, Christoph and Elmqvist, Hilding and Friedrich, Markus and Junghanns, Andreas and Mauss, Jakob and Neumerkel, Dietmar and others},
  booktitle={9th International Modelica Conference},
  pages={173--184},
  year={2012},
  organization={The Modelica Association}
}

@inproceedings{junghanns2021functional,
  title={The functional mock-up interface 3.0-new features enabling new applications},
  author={Junghanns, Andreas and Gomes, Cl{\'a}udio and Schulze, Christian and Schuch, Klaus and Pierre, R and Blaesken, Matthias and Zacharias, Irina and Pillekeit, Andreas and Wernersson, Karl and Sommer, Torsten and others},
  booktitle={Modelica conferences},
  pages={17--26},
  year={2021}
}

@misc{reference_fmus,
  author       = {Modelica Association},
  title        = {Reference FMUs},
  year         = {2024},
  url          = {https://github.com/modelica/Reference-FMUs},
  note         = {Accessed: 2024-12-02},
  abstract     = {A collection of reference Functional Mock-up Units (FMUs) for testing and validation of FMI tools and implementations.}
}

@misc{fmu4j,
  author       = {Ecos Platform},
  title        = {FMU4j - A Java library for creating FMUs},
  year         = {2024},
  url          = {https://github.com/Ecos-platform/FMU4j},
  note         = {Accessed: 2024-12-02},
  abstract     = {FMU4j is a software package for the JVM that enables export of models compatible with FMI 2.0 for Co-simulation.}
}

@misc{cppfmu,
  author       = {Viproma},
  title        = {cppfmu - A C++ library for FMU development},
  year         = {2024},
  url          = {https://github.com/viproma/cppfmu},
  note         = {Accessed: 2024-12-02},
  abstract     = {cppfmu is a C++ library designed to simplify the creation of Functional Mock-up Units (FMUs) for the FMI standard.}
}

@inproceedings{hatledal2020enabling,
  title={Enabling python driven co-simulation models with pythonfmu},
  author={Hatledal, Lars Ivar and Collonval, Fr{\'e}d{\'e}ric and Zhang, Houxiang},
  booktitle={Proceedings of the 34th International ECMS-Conference on Modelling and Simulation-ECMS 2020},
  year={2020},
  organization={ECMS European Council for Modelling and Simulation}
}

@misc{javafmi,
  author       = {Siani ITS},
  title        = {JavaFMI - A Java library for working with FMUs},
  year         = {2024},
  url          = {https://bitbucket.org/siani/javafmi/wiki/Home},
  note         = {Accessed: 2024-12-02},
  abstract     = {JavaFMI is a library that enables loading, interacting with, and simulating Functional Mock-up Units (FMUs) using Java.}
}





